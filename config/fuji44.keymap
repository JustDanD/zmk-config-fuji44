/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <13 22>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        nexttab: nexttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp RCTRL>;

            label = "NEXTTAB";
            wait-ms = <10>;
        };

        prevtab: prevtab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp RCTRL &kp LEFT_SHIFT>;

            label = "PREVTAB";
            wait-ms = <15>;
        };

        nextgroup: nextgroup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp DOWN_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_ALT>;

            label = "NEXTGROUP";
            wait-ms = <10>;
        };

        prevgroup: prevgroup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_ALT>;

            label = "PREVGROUP";
            wait-ms = <10>;
        };

        nextproj: nextproj {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp RCTRL &kp LEFT_ALT>;

            label = "NEXTPROJ";
            wait-ms = <10>;
        };

        prevproj: prevproj {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL &kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp RCTRL &kp LEFT_ALT &kp LEFT_SHIFT>;

            label = "PREVPROJ";
            wait-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&kp ESC    &kp Q         &kp W             &kp E        &kp R              &kp T          &kp Y        &kp U               &kp I             &kp O              &kp P            &kp MINUS
&kp LCTRL  &hrm LCTRL A  &hrm LEFT_ALT S   &hrm LGUI D  &hrm LEFT_SHIFT F  &kp G          &kp H        &hrm RIGHT_SHIFT J  &hrm RIGHT_GUI K  &hrm RIGHT_ALT L   &hrm RCTRL SEMI  &kp SQT
&kp LSHFT  &kp Z         &kp X             &kp C        &kp V              &kp B          &kp N        &kp M               &kp COMMA         &kp DOT            &kp FSLH         &kp BACKSLASH
                         &kp LEFT_BRACKET  &kp CAPS     &lt 1 TAB          &lt 2 SPACE    &lt 3 ENTER  &lt 4 BACKSPACE     &kp RALT          &kp RIGHT_BRACKET
            >;
        };

        nav {
            bindings = <
&trans  &trans    &trans          &trans        &trans     &trans    &trans  &trans             &trans            &trans           &trans  &trans
&trans  &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans    &trans  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans  &trans
&trans  &kp HOME  &kp PAGE_DOWN   &kp PG_UP     &kp END    &trans    &trans  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &trans  &trans
                  &trans          &trans        &trans     &trans    &trans  &trans             &trans            &trans
            >;
        };

        sys {
            bindings = <
&bootloader  &trans  &prevproj   &trans  &nextproj   &trans    &trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &bootloader
&trans       &trans  &prevtab    &trans  &nexttab    &trans    &trans  &trans        &trans          &trans        &trans        &trans
&sys_reset   &trans  &prevgroup  &trans  &nextgroup  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &sys_reset
                     &trans      &trans  &trans      &trans    &trans  &trans        &trans          &trans
            >;
        };

        num {
            bindings = <
&kp LEFT_PARENTHESIS   &kp MINUS   &kp N7        &kp N8        &kp N9        &kp PLUS        &trans  &trans           &trans     &trans    &trans         &trans
&kp COMMA              &kp PERIOD  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL       &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp LALT  &kp RIGHT_WIN  &trans
&kp RIGHT_PARENTHESIS  &kp SLASH   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK    &trans  &trans           &trans     &trans    &trans         &trans
                                   &kp N0        &trans        &trans        &kp SPACE       &trans  &trans           &trans     &trans
            >;
        };

        sym {
            bindings = <
&kp LEFT_BRACE   &kp MINUS  &kp AMPERSAND          &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp PLUS        &trans  &trans      &trans     &trans        &trans         &trans
&kp COMMA        &kp DOT    &kp DOLLAR             &kp PERCENT   &kp CARET             &kp EQUAL       &trans  &kp RSHIFT  &kp RCTRL  &kp LEFT_ALT  &kp RIGHT_WIN  &trans
&kp RIGHT_BRACE  &kp SLASH  &kp EXCL               &kp AT_SIGN   &kp HASH              &kp ASTERISK    &trans  &trans      &trans     &trans        &trans         &trans
                            &kp RIGHT_PARENTHESIS  &kp GRAVE     &trans                &kp SPACE       &trans  &trans      &trans     &trans
            >;
        };
    };
};
